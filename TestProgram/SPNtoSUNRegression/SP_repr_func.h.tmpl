/***************************************************************************\
* Copyright (c) 2008, Claudio Pica and Agostino Patella                     *   
* All rights reserved.                                                      * 
\***************************************************************************/

#ifndef SPN_REPR_FUNC_H
#define SPN_REPR_FUNC_H

#if (NG!=$N$) 
#error : Mismatch between NG and representation functions!
#endif
#if (SPNF!=$REPR::DIM$) 
#error : Mismatch between NF and representation functions!
#endif



/*
*   _FUND_NORM2 = C(FUND)
*   _FUND_NORM2 = C(REPR)
*/
#define _FUND_NORM2 ($GROUP::NORM2$)
#define _REPR_NORM2 ($REPR::NORM2$)

/*
*	v $REPR::TYPE$ matrix $REPR::DIM$*$REPR::DIM$
*	u complex matrix $N$*$N$
*	v is the representation of u, as element of SU($N$)
*/
#define _spN_group_represent(v,u) \
$REPR::GROUP_REPRESENT:(v):(u)$

/*
*	m $REPR::TYPE$ matrix $REPR::DIM$*$REPR::DIM$
*	h real $GROUP::DIM$-vector
*	m = sum(A) i*h(A)*rT(A)
*/
#define _spN_algebra_represent(m,h) \
$REPR::ALGEBRA_REPRESENT:(m):(h)$


/*
*	h real $GROUP::DIM$-vector
*	m $REPR::TYPE$ matrix $REPR::DIM$*$REPR::DIM$
*	h(A) = -i*ReTr[rT(A).m]/C(r)
*/
#define _spN_algebra_project(h,m) \
$REPR::ALGEBRA_PROJECT:(h):(m)$


/*
*	m $REPR::TYPE$ matrix $N$*$N$
*	h real $GROUP::DIM$-vector
*	m = sum(A) i*h(A)*T(A)
*/
#define _fund_spN_algebra_represent(m,h) \
$GROUP::ALGEBRA_REPRESENT:(m):(h)$


/*
*	h real $GROUP::DIM$-vector
*	m $REPR::TYPE$ matrix $N$*$N$
*	h(A) = -i*ReTr[T(A).m]/C(FUND)
*/
#ifdef WITH_QUATERNIONS

#define _fund_spN_algebra_project(h,m) \
	(h).c[0] = 2.*(m).c[2]; \
	(h).c[1] = 2.*(m).c[1]; \
	(h).c[2] = 2.*(m).c[3]
    
#else

#define _fund_spN_algebra_project(h,m) \
$GROUP::ALGEBRA_PROJECT:(h):(m)$

#endif

#endif 
